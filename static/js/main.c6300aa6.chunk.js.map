{"version":3,"sources":["App.js","serviceWorker.js","components/carousel.js","api/bmob.js","components/eventlist.js","pages/index.js","components/amap.js","pages/nav.js","pages/detail.js","pages/feed.js","index.js"],"names":["Component","Boolean","window","location","hostname","match","Carousel","react_default","a","createElement","className","type","name","id","defaultChecked","alt","src","htmlFor","Bmob","initialize","BmobUtil","getEventList","filter","size","callback","parseInt","query","Query","limit","find","then","res","getEventDetail","get","getNavList","EventList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","list","self","props","data","setState","fetchEventList","dateFormatter","date","Math","floor","getTime","Date","now","isExpiredFilter","title","map","item","key","objectId","react_router_dom","to","concat","dist_default","format","iso","abs","AMap","visible","position","longitude","latitude","lib","center","amapkey","events","markerEvents","isCustom","_this2","click","e","loadMap","Nav","hash","cate","obj","iconClass","arr","dest","forEach","push","reflect","_this3","groupBy","watchHashChanged","fetchList","_this4","addEventListener","_this5","href","target","index","sub","idx","link","favicon","data-lang","lang","desc","XMLParser","require","install","ReactDOM","render","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6300aa6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './assets/css/normalize.css';\n//import './assets/css/skeleton.css';\nimport './assets/css/layout.css';\n\nclass App extends Component{\n  render(){\n    return (\n      <div className=\"App container\">\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport '../assets/css/carousel.css';\r\n\r\nclass Carousel extends Component{\r\n    render(){\r\n        return (\r\n        <div className=\"carrousel\">\r\n\t\t\t<input type=\"radio\" name=\"slides\" id=\"radio-1\" defaultChecked=\"checked\" />\r\n\t\t\t<input type=\"radio\" name=\"slides\" id=\"radio-2\" />\r\n\t\t\t<input type=\"radio\" name=\"slides\" id=\"radio-3\" />\r\n\t\t\t<input type=\"radio\" name=\"slides\" id=\"radio-4\" />\r\n\t\t\t<ul className=\"slides\">\r\n\t\t\t\t <li className=\"slide\">\r\n            <p>\r\n               <q>It was a pleasure to work with him</q> \r\n              <span className=\"author\">\r\n              <img alt=\"\" src=\"https://images.unsplash.com/photo-1558868779-105a6dc121c0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" />\r\n              JR Tolkien\r\n              </span>\r\n            </p>\r\n           </li>        \r\n            <li className=\"slide\">\r\n              <p>\r\n                <q>He is a good friend of mine</q> \r\n                <span className=\"author\">\r\n                  <img alt=\"\" src=\"https://images.unsplash.com/photo-1536066738135-f8aa1e958cc1?ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80\" />\r\n                  Sinatra\r\n                </span>\r\n              </p>\r\n           </li>\r\n          <li className=\"slide\">\r\n             <p>\r\n                <q>This is pretty cool</q> \r\n                <span className=\"author\">\r\n                <img alt=\"\" src=\"https://images.unsplash.com/photo-1551191374-fd8a2940e787?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" />\r\n                Alf\r\n                </span>\r\n             </p>\r\n          </li>\r\n          <li className=\"slide\">\r\n            <p>\r\n              <q>This is awesome. Only Css you say?</q> \r\n              <span className=\"author\">\r\n                <img alt=\"\" src=\"https://images.unsplash.com/photo-1536066738135-f8aa1e958cc1?ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80\" />\r\n                The octocat\r\n              </span>\r\n            </p>\r\n           </li>\r\n\t\t\t</ul>\r\n\t\t\t<div className=\"slidesNavigation\">\r\n\t\t\t\t<label htmlFor=\"radio-1\" id=\"dotForRadio-1\"></label>\r\n\t\t\t\t<label htmlFor=\"radio-2\" id=\"dotForRadio-2\"></label>\r\n\t\t\t\t<label htmlFor=\"radio-3\" id=\"dotForRadio-3\"></label>\r\n\t\t\t\t<label htmlFor=\"radio-4\" id=\"dotForRadio-4\"></label>\r\n\t\t\t</div>\r\n        </div>\t\t            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Carousel;","import Bmob from \"hydrogen-js-sdk\";\r\nBmob.initialize(\"59d4343f153eb8b37eae01aa766216d6\", \"98c5871b09d16628b04d51c03fb06bcc\");\r\n\r\nvar BmobUtil = function(){};\r\nBmobUtil.getEventList=function(filter,size,callback){\r\n    filter = 1 || filter;\r\n    size = parseInt(size) ? parseInt(size) : 1;\r\n    if(filter===0){\r\n\r\n    }\r\n    const query = Bmob.Query(\"events\");\r\n    query.limit(size)\r\n    query.find().then(res => {\r\n        callback(res)\r\n    });\r\n}\r\n\r\nBmobUtil.getEventDetail=function(id,callback){\r\n    const query = Bmob.Query(\"events\")\r\n    query.get(id).then(res => {\r\n        callback(res)\r\n    });\r\n}\r\n\r\nBmobUtil.getNavList=function(callback){\r\n    const query = Bmob.Query(\"tri-nav\")\r\n    query.find().then(res => {\r\n        callback(res)\r\n    });\r\n}\r\n\r\nexport default BmobUtil;","import React, {Component} from 'react';\r\nimport DayJs from 'react-dayjs';\r\nimport BmobUtil from '../api/bmob.js';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nclass EventList extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            list: []\r\n        }\r\n    }\r\n\r\n    fetchEventList(){\r\n        const self=this\r\n        BmobUtil.getEventList(this.props.filter, this.props.size, function(data){\r\n            self.setState({\r\n                isLoaded: true,\r\n                list: data\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.fetchEventList()\r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    render(){\r\n        const dateFormatter= date => {\r\n            return Math.floor((date.getTime()-Date.now())/(24*3600*1000));\r\n        }\r\n        const isExpiredFilter = date => {\r\n            return dateFormatter(date)>=0;\r\n        }\r\n        return (\r\n            <section>\r\n                <div className=\"list-header\">{this.props.title}</div>\r\n                <div className=\"list-body\">\r\n                    {\r\n                        this.state.isLoaded\r\n                        ?\r\n                        this.state.list.map((item)=>\r\n                        <div className=\"item\" key={item.objectId}>\r\n                            <div className=\"item-body\">\r\n                                <div className=\"title\"><Link to={`/detail/${item.objectId}`}>{item.title}</Link></div>\r\n                                <div className=\"desc\"><DayJs format=\"YYYY-MM-DD\">{item.date.iso}</DayJs> {item.location}</div>\r\n                            </div>\r\n                            <div className=\"item-footer\">\r\n                                <div className={isExpiredFilter(new Date(item.date.iso)) ? \"icon-calendar\" : \"icon-calendar icon-calendar-expired\"}>\r\n                                    <em>{isExpiredFilter(new Date(item.date.iso)) ? \"剩余天\" : \"过去天\"}</em>{Math.abs(dateFormatter(new Date(item.date.iso)))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                        :\r\n                        <div className=\"item\">加载中……</div>\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, {Component} from 'react';\r\nimport Carousel from '../components/carousel'\r\nimport EventList from '../components/eventlist'\r\n\r\nclass Index extends Component{\r\n    render(){\r\n        return (\r\n            <section className=\"container\">\r\n            <Carousel></Carousel>\r\n            <EventList title=\"未来赛事\" filter=\"0\" size=\"3\"></EventList>\r\n            <EventList title=\"已结束赛事\" filter=\"1\" size=\"3\"></EventList>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React, {Component} from 'react';\r\nimport { Map, Marker, InfoWindow  } from 'react-amap';\r\n\r\nclass AMap extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            list: [],\r\n            visible: false,\r\n            position:{longitude: 120, latitude: 30}\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"map\" className=\"map\">\r\n                <Map center={this.state.position} amapkey=\"73f612b09deeba22de17c0c7dfdebb67\">\r\n                    <Marker position={this.state.position} title={this.props.location} events={this.markerEvents} />\r\n                    <InfoWindow\r\n                        position={this.state.position}\r\n                        visible={this.state.visible}\r\n                        isCustom={false}\r\n                    >\r\n                        <div>{this.props.location}</div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadMap(){\r\n        this.markerEvents = {\r\n            click: (e) => {\r\n                this.setState({\r\n                    visible: true\r\n                })\r\n            },\r\n        }  \r\n    }\r\n\r\n    componentWillMount(){\r\n        this.loadMap()\r\n    }\r\n}\r\n\r\nexport default AMap;","import React, {Component} from 'react';\r\nimport '../assets/css/nav.css';\r\nimport BmobUtil from '../api/bmob.js';\r\n\r\nclass Nav extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            error: null,\r\n            hash: '',\r\n            isLoaded: false,\r\n            list: []\r\n        }\r\n    }\r\n\r\n    reflect(cate){\r\n        var obj={};\r\n        switch(parseInt(cate)){\r\n            case 1:\r\n                obj={\r\n                    name: 'news',\r\n                    title: '新闻资讯',\r\n                    iconClass: 'iconfont icon-Rss',\r\n                    type: 'link'\r\n                };\r\n                break;\r\n            case 2:\r\n                obj={\r\n                    name: 'kits',\r\n                    title: '装备评测',\r\n                    iconClass: 'iconfont icon-setting',\r\n                    type: 'link'\r\n                };\r\n                break;\r\n                \r\n            case 3:\r\n                    obj={\r\n                        name: 'race',\r\n                        title: '赛事公司',\r\n                        iconClass: 'iconfont icon-date',\r\n                        type: 'link'\r\n                    };\r\n                    break;\r\n                \r\n            case 4:\r\n                    obj={\r\n                        name: 'train',\r\n                        title: '训练理论',\r\n                        iconClass: 'iconfont icon-file',\r\n                        type: 'link'\r\n                    };\r\n                    break;\r\n                \r\n            case 5:\r\n                    obj={\r\n                        name: 'wechat',\r\n                        title: '微信公众号',\r\n                        iconClass: 'iconfont icon-share',\r\n                        type: 'wechat'\r\n                    };\r\n                    break;\r\n                \r\n            case 6:\r\n                    obj={\r\n                        name: 'athlete',\r\n                        title: '运动员',\r\n                        iconClass: 'iconfont icon-instagram',\r\n                        type: 'link'\r\n                    };\r\n                    break;\r\n            \r\n            case 7:\r\n            default:\r\n                    obj={\r\n                        name: 'other',\r\n                        title: '其他',\r\n                        iconClass: 'iconfont icon-hot',\r\n                        type: 'link'\r\n                    };\r\n                    break;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    groupBy(arr){\r\n        var map={},dest=[];\r\n        arr.forEach(item=>{\r\n            if(!map[item.cate]){\r\n                dest.push({\r\n                    cate: item.cate,\r\n                    obj: this.reflect(item.cate),\r\n                    list: [item]\r\n                });\r\n                map[item.cate]=item;\r\n            }else{\r\n                dest.forEach(obj=>{\r\n                    if(obj.cate===item.cate){\r\n                        obj.list.push(item);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\t\r\n        return dest;\r\n    }\r\n\r\n    fetchList(){\r\n        //console.log(TriNavData)\r\n        BmobUtil.getNavList((data)=>{\r\n            var list = this.groupBy(data);\r\n            this.setState({\r\n                isLoaded: true,\r\n                list: list\r\n            });\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.watchHashChanged()\r\n        this.fetchList()\r\n    }\r\n\r\n    watchHashChanged(){\r\n        if(window.location.hash){\r\n            this.state.hash=window.location.hash;\r\n        }\r\n        window.addEventListener('hashchange', ()=>{\r\n            this.state.hash=window.location.hash;\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <section className=\"container\">\r\n                <div className=\"left-bar\">\r\n                    <div className=\"title\">铁人三项导航</div>\r\n                    <div className=\"nav\">\r\n                        <div className=\"nav-item\">\r\n                            <ul>\r\n                            {this.state.list.map((item) =>\r\n                                <li key={item.cate} className={this.state.hash === '#' + item.obj.name ? \"active\" : \"\"}>                                    \r\n                                    <a href={\"#\" + item.obj.name}><i className={item.obj.iconClass}></i> {item.obj.title}</a>\r\n                                </li>\r\n                            )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"author\">\r\n                        作者：<a href=\"https://migao.io/\" target=\"_blank\">Migao</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"mainContent\">\r\n                        {this.state.list.map((item,index)=>\r\n                        <div className={item.obj.type + ' box'} id={item.obj.name} key={index}>\r\n                            <div className=\"title\">\r\n                                <i className={item.obj.iconClass}></i>\r\n                                {item.obj.title}\r\n                            </div>\r\n                            {\r\n                                item.list.map((sub,idx)=>\r\n                                <a className=\"item\" key={idx} href={sub.link} target=\"_blank\">\r\n                                    <div className=\"logo\">\r\n                                        <img src={sub.favicon} alt={sub.title} />\r\n                                        <div>{sub.title}</div>\r\n                                        {item.type!='wechat' ?\r\n                                        <span data-lang={sub.lang}></span>\r\n                                        :''\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"desc\">{sub.desc}</div>\r\n                                </a>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"footer\">\r\n                        <p>反馈意见请发送至1289657692@qq.com</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;\r\n","import React, {Component} from 'react';\r\nimport BmobUtil from '../api/bmob.js';\r\nimport AMap from '../components/amap';\r\nimport DayJs from 'react-dayjs';\r\n\r\nclass EventDetail extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            entity: {}\r\n        }\r\n    }\r\n\r\n    fetchEventList(){\r\n        let id = this.props.match.params.name;\r\n        \r\n        const self=this\r\n        BmobUtil.getEventDetail(id, function(data){\r\n            self.setState({\r\n                isLoaded: true,\r\n                entity: data\r\n            })\r\n            console.log(self.state.entity)\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.fetchEventList()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <section className=\"container\">\r\n                <div className=\"hero\" style={{backgroundImage: 'url(https://images.unsplash.com/photo-1551191374-fd8a2940e787?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80)'}}>\r\n                    <div className=\"hero-body\">\r\n                        <div className=\"title\">{this.state.entity.title}</div>\r\n                        <div><DayJs format=\"YYYY-MM-DD\">{this.state.entity.date}</DayJs> {this.state.entity.location}</div>\r\n                    </div>\r\n                    <div className=\"hero-footer\">\r\n                        <div className=\"star\">★</div>\r\n                        <div>2019人关注</div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                this.state.isLoaded\r\n                ?\r\n                <div className=\"panel\">\r\n                    <div className=\"title\">\r\n                        <div className=\"item\">比赛时间</div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <DayJs format=\"YYYY-MM-DD\">{this.state.entity.date.iso}</DayJs>\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <div className=\"item\">比赛场地</div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <AMap location={this.state.entity.location}></AMap>\r\n                    </div>\r\n                    <div className=\"content small gray\">\r\n                        {this.state.entity.location}\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <div className=\"item\">竞赛规则</div>\r\n                        <span className=\"title-footer\">\r\n                            <a href=\"\">更多</a>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        Please look at sub tasks for specific issues to clean up the UI.This story should not be assigned to a sprint but the sub tasks should be.Also this story will remain open until at least beta.……\r\n                    </div>\r\n                </div>\r\n                    :\r\n                    <div className=\"loading\">加载中……</div>\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventDetail;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nvar XMLParser = require('react-xml-parser');\r\n\r\nclass Nav extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            list: []\r\n        }\r\n    }\r\n\r\n    fetchList(){\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n        const url = \"https://triathlonworld.com/feed\";\r\n        axios.get(proxyurl +url)\r\n            .then(function (response) {\r\n                var xml = new XMLParser().parseFromString(response.data);\r\n                console.log(xml);\r\n                this.setState({list: xml});\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        \r\n        \r\n    }\r\n    \r\n    componentWillMount(){\r\n        this.fetchList()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <section className=\"feelist\">\r\n                {this.state.list[\"children\"][0][\"children\"].map((item,index) =>\r\n                    <div className=\"item\" key={index}>\r\n                        {item}\r\n                    </div>\r\n                )}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Index from './pages/index'\nimport Detail from './pages/detail'\nimport Nav from './pages/nav'\nimport Feed from './pages/feed'\nrequire('offline-plugin/runtime').install();\nReactDOM.render((\n    <Router>\n      <Route path=\"/\" component={Nav}>\n        {/* <Route path=\"/index\" component={Index} />\n        <Route path=\"/nav\" component={Nav} />\n        { <Route path=\"/feed/\" component={Feed} /> }\n        <Route path=\"/detail/:name\" component={Detail} /> */}\n      </Route>\n    </Router>\n  ), document.getElementById('root'));\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}